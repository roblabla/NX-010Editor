//------------------------------------------------
//--- 010 Editor v8.0.1 Binary Template
//
//      File: RomFs
//   Authors: roblabla
//   Version: 1.0.0
//   Purpose: Parse RomFS files
//  Category: Nintendo Switch
// File Mask: *.romfs
//  ID Bytes:
//   History:
//------------------------------------------------

// In nro.bt, set this to header.size + aset_header.romfs.offset
local int romfs_start = 0;

int align_up(int x) {
    return (x + 3) & ~3;
}

FSeek(romfs_start);

struct {
    uint64 header_size;
    uint64 dir_hash_table_offset;
    uint64 dir_hash_table_size;
    uint64 dir_meta_table_offset;
    uint64 dir_meta_table_size;
    uint64 file_hash_table_offset;
    uint64 file_hash_table_size;
    uint64 file_meta_table_offset;
    uint64 file_meta_table_size;
    uint64 data_offset;
} romfs_header;

FSeek(romfs_start + romfs_header.dir_hash_table_offset);

char DirHashTable[romfs_header.dir_hash_table_size];

FSeek(romfs_start + romfs_header.dir_meta_table_offset);

typedef struct {
    uint32 parent;
    uint32 sibling;
    uint32 child;
    uint32 file;
    uint32 hash;
    uint32 name_size;
    if (name_size != 0) { // Happens for the root.
        char name[name_size];
    }
    char alignment_padding[align_up(FTell() - romfs_start) - (FTell() - romfs_start)];
} romfs_direntry_t;

string direntry_name( romfs_direntry_t &entry ) {
    string s;
    SPrintf(s, "DirEntry[%d, %s]", entry.parent, entry.name_size > 0 ? entry.name : "");
    return s;
}

while (FTell() < romfs_start + romfs_header.dir_meta_table_size + romfs_header.dir_meta_table_offset) {
    romfs_direntry_t DirMetaTable<name=direntry_name>;
}


FSeek(romfs_start + romfs_header.file_meta_table_offset);


typedef struct {
    uint32 parent;
    uint32 sibling;
    uint64 offset;
    uint64 size;
    uint32 hash;
    uint32 name_size;
    char name[name_size];
    char alignment_padding[align_up(FTell() - romfs_start) - (FTell() - romfs_start)];
} romfs_fentry_t;


while (FTell() < romfs_start + romfs_header.file_meta_table_size + romfs_header.file_meta_table_offset) {
    romfs_fentry_t FileTable;
}
